---
version: "3.3"
services:
  discord-voicebot-api:
    build:
      context: ./api
      dockerfile: Dockerfile.api
    container_name: discord-voicebot-api
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    image: "discord-voicebot-api:latest"
    restart: "no"
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
      - "/tmp/scemo-pezzente-api:/tmp/scemo-pezzente-api"
      - "/dev/dri/card0:/dev/dri/card0"
      - "/dev/dri/renderD128:/dev/dri/renderD128"
    entrypoint: ./entrypoint.sh
    #ports:
    #  - "5080:5080"
    networks:
      - caching
  discord-voicebot-battuteapi:
    container_name: discord-voicebot-battuteapi
    build:
      context: ./battuteAPI
      dockerfile: Dockerfile
    container_name: battuteapi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    image: "discord-voicebot-battuteapi:latest"
    volumes:
      - ./config/battuteapi_data:/usr/src/app/data
    ports:
      - 3050:3050
    restart: "no"
  discord-voicebot:
    build:
      context: ./api
      dockerfile: Dockerfile.balancer
    container_name: discord-voicebot
    image: "discord-voicebot-api-balancer:latest"
    ports:
      - "5080:5080"
    depends_on:
      - discord-voicebot-api
    volumes:
      - "/tmp/scemo-pezzente-api:/tmp/scemo-pezzente-api"
    restart: "no"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://192.168.1.160:5080/chatbot_text/repeat/healtcheck/000000"]
      interval: 30s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    container_name: voicebot-redis
    networks:
      - caching
    restart: "no"
  discord-voicebot-discord:
    build:
      context: ./client
      dockerfile: Dockerfile.client
    container_name: scemo-pezzente-discord
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    image: "discord-voicebot-discord:latest"
    restart: "no"
    depends_on:
      discord-voicebot:
        condition: service_healthy
    volumes:
      - "./config.json:/usr/src/app/config.json"
      - "/tmp/scemo-pezzente-discord:/tmp/scemo-pezzente-discord"
  discord-voicebot-telegram:
    build:
      context: ./FrittoPlayTelegramBot
      dockerfile: Dockerfile
    container_name: discord-voicebot-telegram
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    depends_on:
      discord-voicebot-api-balancer:
        condition: service_healthy
    volumes:
      - ".env:/app/.env"
    image: "discord-voicebot-telegram:latest"
    restart: "no"
networks:
  caching:
    driver: bridge


